@model IEnumerable<Napping_PJ.Areas.Admin.Models.OrdersViewModel>

@{
	ViewData["Title"] = "Index";
}

@section Styles{
	<link href="~/css/table.css" rel="stylesheet" />
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css%22%3E">
}
<h1 class="mt-3">訂單管理</h1>

<div id="app" class="container">



	<div class="table-responsive">
		<div class="table-wrapper">
			@*藍藍綠綠那一塊*@
			<div class="table-title">
				<div class="row">
					@*如果想來點查詢功能<input type="text" class="form-control" placeholder="請輸入篩選關鍵字" v-model="Filter" @@keyup="filterEmployeeDTOes" />*@
					<div>
						<button class="btn btn-info" data-toggle="modal" @@click="showInsertPage"><span><i class="fa-solid fa-circle-plus"></i> 新增</span></button>
					</div>
				</div>
			</div>
			@*藍藍綠綠那一塊*@
			@*表格標題*@
			<table class="table table-striped table-hover">
				<thead>
					<tr>
						<td>訂單ID</td>
						<td>會員帳號</td>
						<td>付款方式ID</td>
						<td>日期</td>
						<td>訂單明細</td>
						<td>操作</td>
					</tr>
				</thead>
				@*表格標題*@
				@*表格內容*@
				<tbody>
					<tr v-for="item in OrdersViewModel ">
						@*v-for="item in FeatureVMs"*@
						<td>{{item.orderId}}</td>
						<td>{{ item.customerName}}</td>

						<td>{{item.paymentType}}</td>
						<td><input type="datetime-local" class="form-control" v-model="item.date" disabled /></td>

						<td>
							<a class="btn edit" @@click="getOrderDetails(item)"><i class="fa-solid fa-pen" title="Edit"></i></a>
						</td>
						<td>
							<a class="btn edit" @@click="edit(item)"><i class="fa-solid fa-pen" title="Edit"></i></a>
							<a class="btn delete" @@click="deleteOrderIdService(item.orderId)"><i class="fa-solid fa-trash-can" title="Delete"></i></a>
						</td>

					</tr>
				</tbody>
				@*表格內容*@
			</table>

		</div>
		@*訂單明細用的互動視窗*@
		<div class="form-group" >
			<div class="modal fade" id="orderDetailsModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
				<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="modalTitleId">訂單明細</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body" v-for="item in OrderDetailsViewModel">
							<div class="form-group">
								<label class="form-label">訂單ID: {{item.orderId}}</label>								
							</div>
							<div class="form-group">
								<label class="form-label">訂單明細ID:{{item.orderDetailId}}</label>								
							</div>
							<div class="form-group">
								<label class="form-label">房型ID:{{item.roomId}}</label>								
							</div>
							<div class="form-group">
								<label class="form-label">入住時間:{{item.checkIn}}</label>
							</div>
							<div class="form-group">
								<label class="form-label">退房時間:{{item.checkOut}}</label>
							</div>
							<div class="form-group">
								<label class="form-label">客人人數:{{item.numberOfGuests}}</label>
							</div>
							<div class="form-group">
								<label class="form-label">旅行類型:{{item.travelType}}</label>
							</div>
							<div class="form-group">
								<label class="form-label">筆記:{{item.note}}</label>
							</div>
							<div class="form-group">
								<label class="form-label">日期:{{item.date}}</label>								
							</div>


						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
							<button type="button" class="btn btn-primary" @@click="update">儲存</button>
						</div>
					</div>
				</div>
			</div>
		</div>
		@*編輯用的互動視窗*@
		<div class="form-group" >
			<div class="modal fade" id="editModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
				<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="modalTitleId">編輯</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>


						<div class="modal-body">
							<div class="form-group">
								<label class="form-label">訂單ID:</label>
								<input class="form-control" v-model="orderId" disabled />
							</div>
							<div class="form-group">
								<label class="form-label">會員名稱:{{customerName}}</label>								
								<input class="form-control" v-model="customerId"  disabled />
							</div>

							<div class="form-group">
								<label class="form-label">付款方式:{{paymentType}}</label>								
								<input class="form-control" v-model="paymentId" disabled />
							</div>
							<div class="form-group">
								<label class="form-label">日期</label>
								<input class="form-control" type="datetime-local" v-model="date" />
							</div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
							<button type="button" class="btn btn-primary" @@click="update">儲存</button>
						</div>
					</div>
				</div>
			</div>
		</div>
		@*新增用的互動視窗*@
		<div class="form-group">
			<div class="modal fade" id="insertPage" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
				<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="modalTitleId">新增</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">

							<div>
								<label>會員:</label>
								<select class="form-control" v-model="customerId">
									<option v-for="item in MemberViewModel" :value="item.customerId">{{item.name}}</option>
								</select>
							</div>

							<div>
								<label>付款類型:</label>
								<select class="form-control" v-model="paymentId">
									<option v-for="item in PaymentViewModel" :value="item.paymentId">{{item.type}}</option>
								</select>
							</div>
							<div>
								<div class="form-group">
									<label class="form-label">日期</label>
									<input class="form-control" type="datetime-local" v-model="date" />
								</div>


							</div>
							<div class="modal-footer">
								<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
								<button type="button" class="btn btn-primary" @@click="createOrder">新增</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts
	{
	<script src="~/lib/vue/vue.min.js"></script>
	<script src="~/lib/axios/axios.min.js"></script>
	<script>
		var data = new Vue({
			el: "#app",
			data: {
				OrdersViewModel: [],
				OrderDetailsViewModel: [],
				MemberViewModel: [],
				PaymentViewModel: [],
				date: "",
				customerId: "",
				orderId: "",
				paymentId: "",
				orderDetailId: "",
				customerName:"",
				paymentType:"",
				roomId:"",
			},
			mounted: function () {
				let _this = this;
				_this.getOrder();
				_this.getMember();
				_this.getPayment();
				_this.getOrderDetails();
			},
			methods: {
				getOrderDetails:  function (item) {
					let _this = this;
					_this.roomId = item.roomId;
					_this.orderId = item.orderId;
					_this.orderDetailId = item.orderDetailId;
					$("#orderDetailsModal").modal("show");
					axios.get(`Orders/GetOrderDetails?ID=${item.orderId}`,)
						.then(function (response) {

							//alert(JSON.stringify(response.data))
							_this.OrderDetailsViewModel = response.data;
						})
						.catch(function (error) {
							console.log(error);
						});
				},
				getPayment: async function () {
					let _this = this;
					axios.get("Orders/GetPayment")
						.then(function (response) {

							//alert(JSON.stringify(response.data))
							_this.PaymentViewModel = response.data;
						})
						.catch(function (error) {
							console.log(error);
						});
				},
				getMember: async function () {
					let _this = this;
					axios.get("Orders/GetMember")
						.then(function (response) {

							//alert(JSON.stringify(response.data))
							_this.MemberViewModel = response.data;
						})
						.catch(function (error) {
							console.log(error);
						});
				},
				getOrder: async function () {
					let _this = this;
					await axios.get("Orders/GetOrder")
						.then(function (response) {

							//alert(JSON.stringify(response.data))
							_this.OrdersViewModel = response.data;
						})
						.catch(function (error) {
							console.log(error);
						});
				},
				showInsertPage: function () {
					$('#insertPage').modal('show');
				},
				createOrder: function () {


					let _this = this;
					var request = {
						orderId: 0,
						customerId: _this.customerId,
						paymentId: _this.paymentId,
						date: new Date(_this.date).toISOString(),
					};
					axios.post("Orders/Create", request)
						.then(res => {
							alert(res.data);
							$("#insertPage").modal('hide');
							_this.getOrder();
						})
				},

				cancel: function () {
					//alert("cancel");
					let _this = this;
					var request = [];
					for (var i = 0; i < _this.OrdersViewModel.length; i++) {
						var item = _this.OrdersViewModel[i];
						if (item.Edit == true) {

							item.date = _this.date;
							item.number = _this.number;
						}
						request.push(item);
					}
					_this.OrdersViewModel = request;
				},

				update: function () {
					//alert("update");
					let _this = this;
					var request = {
						paymentId: _this.paymentId,
						customerId: _this.customerId,
						orderId: _this.orderId,
						date: _this.date,

					};
					axios.post(`Orders/Edit?ID=${_this.orderId}`, request)
						.then(response => {
							alert(response.data);
							_this.getOrder();
							$("#editModal").modal("hide");
						});
				},
				edit: function (item) {
					//alert("edit");
					$("#editModal").modal("show");
					let _this = this;
					_this.paymentId = item.paymentId;
					_this.paymentType = item.paymentType;
					_this.customerName=item.customerName;
					_this.customerId = item.customerId;
					_this.orderId = item.orderId;
					_this.date = item.date;
				},
				deleteOrderIdService: function (orderId) {
					//alert("delete");
					let _this = this;
					var x = _this.OrdersViewModel.find(h => h.orderId == orderId)

					var ret = confirm(`您確定要將ID:${x.orderId}刪除嗎?`);
					if (ret == true) {
						axios.delete(`Orders/DeleteConfirmed?ID=${orderId}`)
							.then(response => {
								var y = _this.OrdersViewModel.findIndex(h => h.orderId == orderId)
								_this.OrdersViewModel.splice(y, 1)
							});
					}
				},
			}
		});
	</script>
}