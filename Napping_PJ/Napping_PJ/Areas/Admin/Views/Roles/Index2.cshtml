@{
    ViewData["Title"] = "角色管理";
}
<div class="row">
    <div class="col">
        <h1 class="mt-3">管理角色</h1>
    </div>
    <div class="col">
        <h1 class="mt-3">使用者角色</h1>
    </div>
</div>
<div id="app" class="row">
    <div class="col">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        角色名
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="role in rolesIndexViewModel.Roles">
                    <td>{{role.Name}}</td>
                    <td><button class="btn-info" @@click="RemoveRole(role.RoleId)">Delete</button></td>
                </tr>
            </tbody>
        </table>
        <div class="row">
            <div class="col-10">
                <div class="input-group mb-3">
                    <label class="input-group-text">角色名稱</label>
                    <input v-model="newRoleName" class="form-control" autocomplete="off" aria-required="true" />
                </div>
            </div>
            <div class="col-2">
                <button class="btn btn-success" type="submit" @@click="AddRole">新增</button>
            </div>
        </div>
    </div>
    <div class="col">
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>使用者</th>
                    <th>擁有角色</th>
                    <th>新增角色</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in rolesIndexViewModel.UserRoleViewModels">
                    <td>{{item.customer.CustomerId}}</td>
                    <td>{{item.customer.Email}}</td>
                    <td>
                        <button class="btn-info me-1" v-for="SRole in item.SelectedRole" :value="SRole.RoleId" @@click="() => RemoveRoleToUser(item.customer.CustomerId,SRole.RoleId)">{{SRole.Name}}</button>
                    </td>
                    <td>
                        <select v-model="roleId" @@change="() => AddUserRole(item.customer.CustomerId)">
                            <option v-for="Role in rolesIndexViewModel.Roles" :value="Role.RoleId">{{Role.Name}}</option>
                        </select>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
@section Scripts{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="~/js/scripts.js"></script>
    <script src="~/lib/vue/vue.min.js"></script>
    <script src="~/lib/axios/axios.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.rowRoleSelecter').change(function () {
                var userId = $(this).closest('tr').find('td:first-child').text();
                var roleId = $(this).val();
                $.ajax({
                    url: '@Url.Action("AddRoleToUser", "Roles",new { area = "Admin" } )',
                    type: "POST",
                    data: { userId: userId, roleId: roleId }
                }).done(function (result) {// success callback function
                    alert('角色新增成功');
                    location.reload();
                }).fail(function (xhr, status, error) {
                    // error callback function
                    alert(xhr.responseText);
                    location.reload();
                })
            });

            $('.roleTag').click(function () {
                var userId = $(this).closest('tr').find('td:first-child').text();
                var roleId = $(this).val();
                $.ajax({
                    url: '@Url.Action("RemoveRoleToUser", "Roles",new { area = "Admin" })',
                    type: "POST",
                    data: { userId: userId, roleId: roleId }
                }).done(function (result) {
                    // success callback function
                    alert('角色刪除成功');
                    location.reload();
                }).fail(function (xhr, status, error) {
                    // error callback function
                    alert(xhr.responseText);
                    location.reload();
                });
            });
        });
    </script>
    <script>
        var vueApp = new Vue({
            data: {
                rolesIndexViewModel: [],
                userId: '',
                roleId: '請選擇角色',
                newRoleName: '',
            },

            mounted: function () {
                let _this = this;
                _this.GetUserRoleList();
            },
            methods: {
                GetUserRoleList: function () {
                    _this = this;
                    axios.post(`GetUserRoleList`)
                        .then(response => {
                            //console.log(response.data);
                            _this.rolesIndexViewModel = response.data;
                        })
                        .catch(err => { console.log(err.response.data) })
                },
                AddUserRole: function (userId) {
                    _this = this;
                    axios.post(`AddRoleToUser?userId=${userId}&roleId=${_this.roleId}`)
                        .then(response => {
                            var user = _this.rolesIndexViewModel.UserRoleViewModels.find(u => u.customer.CustomerId == userId);
                            alert(response.data);
                            this.GetUserRoleList()
                        })
                        .catch(err => { alert(err.response.data) })
                },
                RemoveRoleToUser: function (userId, roleId) {
                    _this = this;
                    axios.post(`RemoveRoleToUser?userId=${userId}&roleId=${roleId}`)
                        .then(response => {
                            var user = _this.rolesIndexViewModel.UserRoleViewModels.find(u => u.customer.CustomerId == userId);
                            //var roleIndex = user.SelectedRole.findIndex(r => r.RoleId == roleId);
                            //user.SelectedRole.splice(roleIndex, 1);
                            alert(response.data);
                            this.GetUserRoleList()
                        })
                        .catch(err => { alert(err.response.data) })
                },
                AddRole: function () {
                    _this = this;
                    var RoleViewModel = {
                        RoleId: '0',
                        Name: _this.newRoleName
                    }
                    axios.post(`AddRole`, RoleViewModel)
                        .then(response => {
                            alert(response.data);
                            _this.GetUserRoleList();
                        })
                        .catch(err => {
                            alert(err.response.data)
                        })
                },
                RemoveRole: function (roleId) {
                    _this = this;
                    axios.post(`DeleteConfirmed/${roleId}`)
                        .then(response => {
                            alert(response.data);
                            _this.GetUserRoleList();
                        })
                        .catch(err => {
                            alert(err.response.data)
                        })
                },
            },
        })
        vueApp.$mount('#app');
    </script>
}