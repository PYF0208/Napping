@section Styles{
	<link href="~/css/table.css" rel="stylesheet" />
}

<h1 class="mt-3">會員促銷設定</h1>

<div id="app" class="container">
	<div class="table-responsive">
		<div class="table-wrapper">
			@*藍藍綠綠那一塊*@
			<div class="table-title">
				<div class="row">
					<input type="text" class="form-control" placeholder="請輸入篩選關鍵字" v-model="Filter" @@keyup="filterPromotions()" />
					<div>
						<button class="btn btn-info" @@click="showInsert()" data-toggle="modal"><span><i class="fa-solid fa-circle-plus"></i> 新增</span></button>
					</div>
				</div>
			</div>
			@*藍藍綠綠那一塊*@
			@*表格標題*@
			<table class="table table-striped table-hover">
				<thead>
					<tr>
						<td>等級名稱</td>
						<td>促銷方案名稱</td>
						<td>起始時間</td>
						<td>結束時間</td>
						<td>促銷折扣</td>
						<td>寄送Email</td>
					</tr>
				</thead>
				@*表格標題*@
				@*表格內容*@
				<tbody>
					<tr v-for="item in PromotionViewModel">
						<td>{{item.levelName}}</td>
						<td>{{item.name}}</td>
						<td><input type="datetime-local" class="form-control" v-model="item.startDate" disabled="true" /></td>
						<td><input type="datetime-local" class="form-control" v-model="item.endDate" disabled="true" /></td>
						<td>{{item.discount}}</td>
						<td><button class="btn btn-danger" @@click="sendemail(item)">寄送</button></td>
						<td>
							<a class="btn edit" @@click="edit(item)"><i class="fa-solid fa-pen" title="Edit"></i></a>
							<a class="btn delete" @@click="deletePromotion(item.promotionId)"><i class="fa-solid fa-trash-can" title="Delete"></i></a>
						</td>
					</tr>
				</tbody>
				@*表格內容*@
			</table>

		</div>
		@*編輯用的互動視窗*@
		<div class="form-group">
			<div class="modal fade" id="editModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
				<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="modalTitleId">編輯</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<div class="form-group">
								<label class="form-label">等級名稱:</label>
								<select class="form-control" v-model="levelId">
									<option v-for="item in LevelViewModel" :value="item.levelId">{{ item.name }}</option>
								</select>
							</div>
							<div class="form-group">
								<label class="form-label">促銷方案名稱:</label>
								<input class="form-control" v-model="name" />
							</div>
							<div class="form-group">
								<label class="form-label">起始時間:</label>
								<input type="datetime-local" class="form-control" v-model="startDate" />
							</div>
							<div class="form-group">
								<label class="form-label">結束時間:</label>
								<input type="datetime-local" class="form-control" v-model="endDate" />
							</div>
							<div class="form-group">
								<label class="form-label">促銷折扣:</label>
								<input class="form-control" v-model="discount" />
							</div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
							<button type="button" @@click="update()" class="btn btn-primary">儲存</button>
						</div>
					</div>
				</div>
			</div>
		</div>
		@*新增用的互動視窗*@
		<div class="form-group">
			<div class="modal fade" id="insertModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
				<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="modalTitleId">新增</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<div class="form-group">
								<label class="form-label">等級名稱:</label>
								<select class="form-control" v-model="insertLevelId">
									<option v-for="item in LevelViewModel" :value="item.levelId">{{ item.name }}</option>
								</select>
							</div>
							<div class="form-group">
								<label class="form-label">促銷方案名稱:</label>
								<input class="form-control" v-model="insertName" />
							</div>
							<div class="form-group">
								<label class="form-label">起始時間:</label>
								<input type="datetime-local" class="form-control" v-model="insertStartDate" />
							</div>
							<div class="form-group">
								<label class="form-label">結束時間:</label>
								<input type="datetime-local" class="form-control" v-model="insertEndDate" />
							</div>
							<div class="form-group">
								<label class="form-label">促銷折扣:</label>
								<input class="form-control" v-model="insertDiscount" />
							</div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
							<button type="button" @@click="insert()" class="btn btn-primary">新增</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>



@section Scripts{

	<script src="~/lib/vue/vue.min.js"></script>
	<script src="~/lib/axios/axios.min.js"></script>
	<script>
		const vm = new Vue({
			el: "#app",
			data() {
				return {
					PromotionViewModel: [],
					LevelViewModel: [],
					Filter: "",
					promotionId: "",
					levelId: "",
					name: "",
					startDate: "",
					endDate: "",
					discount: "",
					date: "",
					levelName: "",
					insertLevelId: "",
					insertName: "",
					insertStartDate: "",
					insertEndDate: "",
					insertDiscount: ""
				};
			},
			mounted: function () {
				let _this = this;
				_this.filterPromotions();
				_this.getLevel();
			},
			methods: {
				sendemail: function (item) {
					//var request = {};
					//axios.get('Promotions/promotionId', request)
					// .then()
					var request = {
						PromotionId: item.promotionId,
						PromotionName: item.name,
						LevelName: item.levelName,
						StartDate: item.startDate,
						EndDate: item.endDate,
						Discount: item.discount
					};
					axios.post('Promotions/SendMailByPromotionId', request).then(response => {
						//alert(response.data);
						swal({
							title: response.data,
							icon: "success",
							button: "關閉視窗",
						});
					});

				},
				filterPromotions: function () {
					let _this = this;
					var request = {};

					request.Discount = isNaN(Number(_this.Filter)) ? -1 : Number(_this.Filter);
					request.Name = request.LevelName = _this.Filter;
					axios.post('Promotions/FilterPromotions', request)
						.then(function (response) {
							//alert(JSON.stringify(response.data));
							_this.PromotionViewModel = response.data;

						});
				},
				getLevel: function () {
					let _this = this;
					axios.get('Promotions/GetLevel')
						.then(function (response) {
							//alert(JSON.stringify(response.data));
							_this.LevelViewModel = response.data;

						});
				},
				edit: function (item) {
					$("#editModal").modal("show");
					let _this = this;
					_this.promotionId = item.promotionId;
					_this.levelId = item.levelId;
					_this.name = item.name;
					_this.startDate = item.startDate;
					_this.endDate = item.endDate;
					_this.discount = item.discount;
				},
				update: function () {
					//alert("update");
					let _this = this;
					var request = {
						PromotionId: _this.promotionId,
						LevelId: _this.levelId,
						Name: _this.name,
						StartDate: _this.startDate,
						Enddate: _this.endDate,
						Discount: _this.discount,
						LevelName: _this.levelName
					};
					axios.put(`Promotions/PutPromotions?id=${_this.promotionId}`, request).then(response => {
						//alert(response.data);
						swal({
							title: response.data,
							icon: "success",
							button: "關閉視窗",
						});
						_this.filterPromotions();
						//_this.cancel();

					});
				},
				showInsert: function () {
					$("#insertModal").modal("show");
				},
				insert: function () {
					let _this = this;
					var prViewModel = {
						PromotionId: 0,
						LevelId: _this.insertLevelId,
						Name: _this.insertName,
						StartDate: new Date(_this.insertStartDate).toISOString(),
						EndDate: new Date(_this.insertEndDate).toISOString(),
						Discount: _this.insertDiscount

					};
					axios.post('Promotions/PostPromotion', prViewModel).then(response => {
						//alert(response.data);
						swal({
							title: response.data,
							icon: "success",
							button: "關閉視窗",
						});
						$('#insertPage').modal('hide');
						_this.filterPromotions();
					});
				},
				deletePromotion: function (promotionId) {
					//alert("delete");
					let _this = this;
					var x = _this.PromotionViewModel.find(p => p.promotionId == promotionId)

					swal({
						title: `您確定要將促銷編號${x.promotionId}-${x.name}刪除嗎?`,
						text: "此項操作將無法復原",
						icon: "warning",
						buttons: true,
						dangerMode: true,
					})
						.then((willDelete) => {
							if (willDelete) {
								axios.delete(`Promotions/DeletePromotions?Id=${promotionId}`).then(response => {
									var y = _this.PromotionViewModel.findIndex(p => p.promotionId == promotionId)
									_this.PromotionViewModel.splice(y, 1)
								});
							}
						});
					
					//var ret = confirm(`您確定要將促銷編號${x.promotionId}-${x.name}刪除嗎?`);
					//if (ret == true) {
					//	axios.delete(`Promotions/DeletePromotions?Id=${promotionId}`)
					//		.then(response => {
					//			var y = _this.PromotionViewModel.findIndex(p => p.promotionId == promotionId)
					//			_this.PromotionViewModel.splice(y, 1)
					//		});
					//}
				},
			}
		})
	</script>
}