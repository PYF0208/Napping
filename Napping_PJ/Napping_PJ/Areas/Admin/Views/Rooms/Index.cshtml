@model IEnumerable<Napping_PJ.Areas.Admin.Models.RoomsViewModel>


@{
	ViewData["Title"] = "Index";
}
@section Styles{
	<link href="~/css/table.css" rel="stylesheet" />
}

<h1 class="mt-3">房型管理</h1>

<div id="app" class="container">

	<div class="table-responsive">
		<div class="table-wrapper">
			@*藍藍綠綠那一塊*@
			<div class="table-title">
				<div class="row">
					@*如果想來點查詢功能<input type="text" class="form-control" placeholder="請輸入篩選關鍵字" v-model="Filter" @@keyup="filterEmployeeDTOes" />*@
					<div>
						<button class="btn btn-info" @@click="showInsert()" data-toggle="modal"><span><i class="fa-solid fa-circle-plus"></i> 新增</span></button>
					</div>
				</div>
			</div>
			@*藍藍綠綠那一塊*@
			@*表格標題*@
			<table class="table table-striped table-hover">
				<thead>
					<tr>
						<th>RoomId</th>
						<th>HotelId</th>
						<th>Type</th>
						<th>Price</th>
						<th>MaxGuests</th>
						<th>房型特徵</th>
						<th>操作</th>

					</tr>
				</thead>
				@*表格標題*@
				@*表格內容*@
				<tbody>
					<tr v-for="item in displayRooms">
						<td>{{item.roomId}}</td>
						<td>{{item.hotelId}}</td>
						<td>{{item.type}}</td>
						<td>{{item.price}}</td>
						<td>{{item.maxGuests}}</td>
						<td>
							<span v-for="f in item.feature">
								<i :class="f.image" style="font-size:20px"></i>{{f.name}}
							</span>
						</td>
						<td>
							<a class="btn edit" @@click="edit(item.roomId)"><i class="fa-solid fa-pen" title="Edit"></i></a>
							<a class="btn delete" @@click="deleteRooms(item.roomId)"><i class="fa-solid fa-trash-can" title="Delete"></i></a>
						</td>
						</tr>
				</tbody>				
				@*表格內容*@
			</table>
			<div style="text-align:center" id="loading">
				<i class="fas fa-spinner fa-spin" style="font-size:30px"></i>
			</div>
		</div>
		@*編輯用的互動視窗*@
		<div class="form-group">
			<div class="modal fade" id="editModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
				<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="modalTitleId">編輯</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<div class="form-group">
								<label class="form-label">RoomId</label>
								<input class="form-control" v-model="originalRoomId" readonly />
							</div>
							<div class="form-group">
								<label class="form-label">HotelId</label>
								<input class="form-control" v-model="originalHotelId" readonly />
							</div>
							<div class="form-group">
								<label class="form-label">Type</label>
								<input class="form-control" v-model="originalType" />
							</div>
							<div class="form-group">
								<label class="form-label">Price</label>
								<input class="form-control" v-model="originalPrice" />
							</div>
							<div class="form-group">
								<label class="form-label">MaxGuests</label>
								<input class="form-control" v-model="originalMaxGuests" />
							</div>
							<div class="form-group">
								<label class="form-label">房型特徵</label>
								<div class="row">
									<div v-for="f in FeatureViewModel" class="form-check col-4" :key="f.name">
										<label class="form-check-label" :for="f.featureId">{{f.name}}</label>
										<i :class="f.image" :key="f.name" ref="icons"></i>
										<input class="form-check-input" type="checkbox" :value="f.featureId" :id="f.featureId" v-model="originalFeatures">
									</div>
								</div>
							</div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
							<button type="button" @@click="update" class="btn btn-primary">儲存</button>
						</div>
					</div>
				</div>
			</div>
		</div>
		@*新增用的互動視窗*@
		<div class="form-group">
			<div class="modal fade" id="insertModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
				<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="modalTitleId">新增</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<div class="form-group">
								<label class="form-label">hotelId</label>
								<input class="form-control" v-model="hotelId" />
							</div>
							<div class="form-group">
								<label class="form-label">type</label>
								<input class="form-control" v-model="type" />
							</div>
							<div class="form-group">
								<label class="form-label">price</label>
								<input class="form-control" v-model="price" />
							</div>
							<div class="form-group">
								<label class="form-label">maxGuests</label>
								<input class="form-control" v-model="maxGuests" />
							</div>
							<div class="form-group">
								<label class="form-label">featureId</label>
								<input class="form-control" v-model="featureId" />
							</div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
							<button type="button" @@click="createRooms" class="btn btn-primary">新增</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>





@section Scripts{

	<script src="~/lib/vue/vue.min.js"></script>
	<script src="~/lib/axios/axios.min.js"></script>

	<script>
		const vm = new Vue({
			el: "#app",
			data: {
				RoomsViewModel: [],
				displayRooms:[],
				FeatureViewModel: [],
				featureId: "",
				name: "",
				image: "",
				filter: "",
				hotelId: "",
				type: "",
				price: "",
				maxGuests: "",
				originalRoomId: "",
				originalHotelId: "",
				originalType: "",
				originalPrice: "",
				originalMaxGuests: "",
				roomId: "",
				originalFeatures: [],
				count:10,
			},
			mounted: function () {
				let _this = this;
				_this.getRooms();
				_this.getFeature();
				let obs = new IntersectionObserver(function(){
					var newData = _this.RoomsViewModel.slice(_this.count,_this.count+10);
					for(let d of newData){
						_this.displayRooms.push(d);
					}
					_this.count+=10;
				},{})
				obs.observe(document.getElementById('loading'))
			},
			methods: {
				getFeature: function () {
					let _this = this;
					axios.get('Rooms/GetFeature').then(response => {

						_this.FeatureViewModel = response.data;
						var FeatureList = [];

						_this.Feature.forEach(
							item => {

								//item.Edit = false;
								FeatureList.push(item);

							}
						)
						_this.Feature = FeatureList;
					})
				},
				edit: function (item) {
					$("#editModal").modal("show");
					let _this = this;
					_this.featureId = item.featureId;
					_this.name = item.name;
					_this.image = item.image;
				},
				update: function () {
					//alert("UPDATE");
					let _this = this;
					var request = {
						FeatureId: _this.featureId,
						Name: _this.name,
						Image: _this.image,
					}
				},
				getRooms: function () {
					//alert("有！！");
					let _this = this;
					var request = {};
					request.RoomId = isNaN(Number(_this.filter)) ? -1 : Number(_this.filter);
					request.HotelId = request.Type = request.Price = request.MaxGuests = _this.filter;
					axios.post('Rooms/FilterRooms', request).then(function (response) {
						_this.displayRooms = response.data.slice(0, 10);
						_this.RoomsViewModel = response.data;
					})
						.catch(function (error) {
							console.log(error);
						});
				},
				edit: function (roomId) {
					$("#editModal").modal("show");
					let _this = this;
					for (var i = 0; i < _this.RoomsViewModel.length; i++) {
						var item = _this.RoomsViewModel[i];
						if (roomId == item.roomId) {
							_this.originalRoomId = item.roomId;
							_this.originalHotelId = item.hotelId;
							_this.originalType = item.type;
							_this.originalPrice = item.price;
							_this.originalMaxGuests = item.maxGuests;
							_this.originalFeatures = item.feature.map(x => x.id)
						}
					}
				},
				update: function () {
					let _this = this
					var request = {
						RoomId: _this.originalRoomId,
						HotelId: _this.originalHotelId,
						Type: _this.originalType,
						Price: _this.originalPrice,
						MaxGuests: _this.originalMaxGuests,
						Features: _this.originalFeatures
					};
					axios.post(`Rooms/Edit?ID=${_this.originalRoomId}`, request)
						.then(response => {
							alert(response.data);
							_this.RoomsViewModel=[];
							_this.getRooms();
							$("#editModal").modal('hide');
						});
				},

				showInsert: function () {
					$("#insertModal").modal("show");
				},
				createRooms: function () {
					let _this = this;
					var req = {
						RoomId: 0,
						HotelId: _this.hotelId,
						Type: _this.type,
						Price: _this.price,
						MaxGuests: _this.maxGuests
					};
					axios.post("Rooms/CreateRooms", req)
						.then(response => {
							alert(response.data);
							$("#insertModal").modal('hide');
							_this.getRooms();
						})
				},
				deleteRooms: function (roomId) {
					let _this = this;
					var ret = confirm("確定要刪除嗎？")
					if (ret == true) {
						axios.delete(`Rooms/DeleteConfirmed?ID=${roomId}`)
							.then(response => {
								alert(response.data);
								_this.getRooms();
							});
					}
				},

			}
		})
	</script>
}