@model IEnumerable<Napping_PJ.Models.Entity.Feature>

@{
	ViewData["Title"] = "Index";
}

@section Styles{
	<link href="~/css/table.css" rel="stylesheet" />
}

<h1 class="mt-3">房型特徵</h1>

<div id="app" class="container">
	<div class="table-responsive">
		<table class="table table-striped table-hover">
			<thead>
				<tr>
					<td>ID</td>
					<td>名稱</td>
					<td>圖示</td>
					<th>功能</th>
				</tr>
			</thead>
			<tbody>
				<tr v-for="item in FeatureVMs">
					<template v-if="item.Edit == true">
						<td>{{item.featureId}}</td>
						<td><input v-model="item.name" /></td>
						<td><input v-model="item.image" /></td>
						<td>
							<a class="btn update"><i class="fa-solid fa-check" data-toggle="tooltip" title="Update">&#xE254;</i></a>
							<a class="btn cancel"><i class="fa-solid fa-xmark" data-toggle="tooltip" title="Cancel">&#xE872;</i></a>
						</td>
					</template>
					<template v-else>
						<td>{{item.featureId}}</td>
						<td>{{item.name}}</td>
						<td>{{item.image}}</td>
						<td>
							<a class="btn edit" @@click="edit(item.featureId)"><i class="fa-solid fa-pen" data-toggle="tooltip" title="Edit">&#xE254;</i></a>
							<a class="btn delete"><i class="fa-solid fa-trash-can" data-toggle="tooltip" title="Delete">&#xE872;</i></a>
						</td>
					</template>
				</tr>
			</tbody>
		</table>
	</div>
</div>
	
	

@section Scripts{
	<script src="~/lib/vue/vue.min.js"></script>
	<script src="~/lib/axios/axios.min.js"></script>
	<script>
		const vm = new Vue({
			el : "#app",
			data() {
				return {
					FeatureVMs: [],
					Filter: "",
				};
			},
			mounted: function () {
				let _this = this;
				_this.filterFeatureVMs();
			},
			methods: {
				filterFeatureVMs: function () {
					//alert("有！！");
					let _this = this;
					var request = {};
					request.FeatureId = isNaN(Number(_this.Filter)) ? -1 : Number(_this.Filter);
					request.FeatureId = request.Name = request.Image = _this.Filter;
					axios.post(`https://localhost:7265/Admin/Feature/FilterFeature`, request).then(response => {
						//alert(JSON.stringify(response.data));
						_this.FeatureVMs = response.data;
						var FList = [];

						_this.FeatureVMs.forEach(
							item => {

								item.Edit = false;
								FList.push(item);

							}
						)
						_this.FeatureVMs = FList;
						})
				},
				edit: function (featureId) {
					let _this = this;
					var FList = [];

					_this.FeatureVMs.forEach(item =>{
						if (featureId == item.featureId){
							alert("有");
							item.Edit = true;
						}
						FList.push(item);
					})
					_this.FeatureVMMs = FList;
				},

			}
		
		
		})
	</script>
}

