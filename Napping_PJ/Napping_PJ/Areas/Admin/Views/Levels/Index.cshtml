@model IEnumerable<Napping_PJ.Areas.Admin.Models.LevelViewModel>

@{
	ViewData["Title"] = "Index";
}

<div id="app" class="container">


	<div class="form-group">
		@*篩選欄位*@
		<div class="row" style="width:50%;margin-left:auto;margin-right:0px">
			<label class="col-md-4">關鍵字:</label>
			<input class="col-md-8 form-control" placeholder="請輸入篩選關鍵字"
				   v-model="filter" @@keyup="filterLevel">
		</div>
	</div>
	<div class="form-group">
		@*新增按鍵*@
		<button type="button" @@click="showInsertPage " class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#modalId">
			新增會員等級
		</button>

	</div>
	<div class="form-group">
		<table class="table table-striped table-hover">
			<thead>
				<tr>
					<td>編輯</td>
					<td>會員等級</td>
					<td>會員名稱</td>

				</tr>
			</thead>
			<tbody>
				<tr v-for="item in LevelViewModel">
					<template v-if="item.Edit==true">
						<td>
							<button class="btn btn-success" @@click="update(item)">修改</button>
							<button class="btn btn-warning" @@click="cancel">取消</button>
						</td>
						<td>{{item.levelId}}</td>
						<td><input v-model="item.name" /></td>


					</template>
					<template v-else>
						<td>
							<button class="btn btn-primary" @@click="edit(item.levelId)">編輯</button>
							<button class="btn btn-danger" @@click="deleteLevel(item.levelId)">刪除</button>
						</td>
						<td>{{item.levelId}}</td>
						<td>{{item.name}}</td>

					</template>
				</tr>
			</tbody>
		</table>
	</div>
	<div class="form-group">
		@*新增加購服務選項畫面*@
		<div class="modal fade" id="insertPage" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
			<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="modalTitleId">新增會員等級</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<div class="form-group">
							<label class="form-label">會員等級名稱:</label>
							<input class="form-control" v-model="name" />
						</div>

					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
						<button type="button" @@click="insert" class="btn btn-primary">新增</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts{
	<script src="~/lib/vue/vue.min.js"></script>
	<script src="~/lib/axios/axios.min.js"></script>

	<script>
		let app = new Vue({
			el: '#app',
			data: {
				LevelViewModel: [],
				filter: "",
				originalName: "",
				name: ""
			},
			mounted: function () {
				let _this = this;
				_this.filterLevel();
			},
			methods: {
				filterLevel: function () {
					let _this = this;
					var request = {};
					request.LevelId = isNaN(Number(_this.filter)) ? -1 : Number(_this.filter);
					request.Name = _this.filter;
					axios.post('Levels/FilterLevel', request)
						.then(function (response) {
							//alert(JSON.stringify(response.data));
							_this.LevelViewModel = response.data;
							var LevelList = [];
							for (var i = 0; i < _this.LevelViewModel.length; i++) {
								var item = _this.LevelViewModel[i];
								item.Edit = false;
								LevelList.push(item);
							}
							_this.LevelViewModel = LevelList;
						});
				},
				update: function (item) {
					//alert("update");
					let _this = this;
					var request = {

						LevelId: item.levelId,
						Name: item.name,

					};
					axios.put(`Levels/PutLevel?Id=${item.levelId}`, request).then(response => {
						alert(response.data);
						_this.filterLevel();
						//_this.cancel();

					});
				},
				cancel: function () {
					//alert("cancel");
					let _this = this;
					var LevelList = [];
					for (var i = 0; i < _this.LevelViewModel.length; i++) {
						var item = _this.LevelViewModel[i];
						if (item.Edit == true) {
							item.Edit = false;
							item.name = _this.originalName;

						}
						LevelList.push(item);
					}
					_this.LevelViewModel = LevelList;
				},
				edit: function (levelId) {
					//alert("edit");
					let _this = this;
					var LevelList = [];
					for (var i = 0; i < _this.LevelViewModel.length; i++) {
						var item = _this.LevelViewModel[i];
						if (levelId == item.levelId) {
							item.Edit = true;
							_this.originalName = item.name;
						}
						LevelList.push(item);
					}
					_this.LevelViewModel = LevelList;
				},
				deleteLevel: function (levelId) {
					//alert("delete");
					let _this = this;
					var x=_this.LevelViewModel.find(l=>l.levelId==levelId)
					var ret = confirm(`您確定要將會員等級${x.levelId}和會員名稱${x.name}刪除嗎?`);
					if (ret == true) {
						axios.delete(`Levels/DeleteLevel?Id=${levelId}`)
						.then(response => {
								var y=_this.LevelViewModel.findIndex(l => l.levelId == levelId)
								_this.LevelViewModel.splice(y, 1)
							});
					}
				},
				showInsertPage: function () {
					$('#insertPage').modal('show');
				},
				insert: function () {
					let _this = this;
					var leViewModel = {
						LevelId: 0,
						Name: _this.name
};
					axios.post('Levels/PostLevel', leViewModel).then(response => {
						alert(response.data);
						$('#insertPage').modal('hide');
						_this.filterLevel();
						_this.name = "";


					});
				}

			}
		});

	</script>

}