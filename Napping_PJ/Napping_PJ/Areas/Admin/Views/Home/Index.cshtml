<h1 class="mt-3">
	Welcome to Napping Admin!
</h1>



<div id="chartApp" class="row">
	<div class="col-xl-12">
		<div class="card mb-4">
			<div class="card-header">
				<i class="fas fa-chart-area me-1"></i>
				訂單統計
			</div>
			<div class="card-body"><canvas id="myAreaChart" width="100%" height="40"></canvas></div>
		</div>
	</div>
	<div class="col-xl-12">
		<div class="card mb-4">
			<div class="card-header">
				<i class="fas fa-chart-bar me-1"></i>
				各地飯店統計
			</div>
			<div class="card-body"><canvas id="myBarChart" width="100%" height="40"></canvas></div>
		</div>
	</div>
</div>

@section Scripts{
	<a href="~/lib/jquery/dist/jquery.min.map"></a>
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/vue/vue.min.js"></script>
	<script src="~/lib/axios/axios.min.js"></script>
	<script>
		var chartApp = new Vue({
			el: '#chartApp',
			data() {
				return {
					vueCanvas: null,
					chartAreaVM: [],
					chartBarVM: [],

				}
			},
			mounted: function () {
				let _this = this;
				_this.getOrderData();
				_this.getHotelData();
			},
			methods: {
				getOrderData: function () {
					let _this = this;
					axios.get(`/Admin/ChartArea/GetOrderData`).then(response => {

						_this.chartAreaVM = response.data;
						_this.setChartArea();
					})
				},
				setChartArea(){
					let _this = this;

					const dates = [];  // 日期
					const totalPrices = [];  // 金額

					for (const item of _this.chartAreaVM) {

						const date = item.date.split('T')[0];
						const totalPrice = item.totalPrice;

						const dateIndex = dates.indexOf(date);  // 檢查日期是否已存在dates中

						if (dateIndex !== -1) {
							// 如果日期已存在，把金額加到totalPrices裡
							totalPrices[dateIndex] += totalPrice;
						} else {
							// 如果日期不存在，增加此日期到date，把金額加到totalPrices裡
							dates.push(date);
							totalPrices.push(totalPrice);
						}
					}


					Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
					Chart.defaults.global.defaultFontColor = '#292b2c';

					var ctx = document.getElementById("myAreaChart");
					var myLineChart = new Chart(ctx, {
						type: 'line',
						data: {
							labels: dates,
							datasets: [{
								label: "總計",
								lineTension: 0.3,
								backgroundColor: "rgba(2,117,216,0.2)",
								borderColor: "rgba(2,117,216,1)",
								pointRadius: 5,
								pointBackgroundColor: "rgba(2,117,216,1)",
								pointBorderColor: "rgba(255,255,255,0.8)",
								pointHoverRadius: 5,
								pointHoverBackgroundColor: "rgba(2,117,216,1)",
								pointHitRadius: 50,
								pointBorderWidth: 2,
								data: totalPrices,
							}],
						},
						options: {
							scales: {
								xAxes: [{
									time: {
										unit: 'date'
									},
									gridLines: {
										display: false
									},
									ticks: {
										maxTicksLimit: 7
									}
								}],
								yAxes: [{
									ticks: {
										min: 0,
										max: 161000,
										maxTicksLimit: 5
									},
									gridLines: {
										color: "rgba(0, 0, 0, .125)",
									}
								}],
							},
							legend: {
								display: false
							}
						}
					});
				
				
				},
				getHotelData: function () {
					let _this = this;
					axios.get(`/Admin/ChartArea/GetHotelData`).then(response => {

						_this.chartBarVM = response.data;
						_this.setChartBar();
					})
				},
				setChartBar: function(){

					let _this = this;

					Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
					Chart.defaults.global.defaultFontColor = '#292b2c';

					var cities = [];
					var cityCount = [];

					for (const item of _this.chartBarVM) {

						if (item.ctiy != ""){
							cities.push(item.city);
							cityCount.push(item.count);
						}
					}


					var ctx = document.getElementById("myBarChart");
					var myLineChart = new Chart(ctx, {
						type: 'bar',
						data: {
							labels: cities,
							datasets: [{
								label: "合計數量",
								backgroundColor: "rgba(2,117,216,1)",
								borderColor: "rgba(2,117,216,1)",
								data: cityCount,
							}],
						},
						options: {
							scales: {
								xAxes: [{
									gridLines: {
										display: false
									},
									ticks: {
										maxTicksLimit: 7
									}
								}],
								yAxes: [{
									ticks: {
										min: 0,
										max: 15,
										maxTicksLimit: 5
									},
									gridLines: {
										display: true
									}
								}],
							},
							legend: {
								display: false
							}
						}
					});

				
				},


			}



		})

	</script>

	<script>
		


		


	</script>
}