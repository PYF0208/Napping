@model IEnumerable<RoomDetailViewModel>
<div id="checkOut">
    <div class="container">
        <div class="py-5 text-center">
            <img class="d-block mx-auto mb-4" src="https://getbootstrap.com/docs/4.3/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">
            <h2>結帳房型</h2>
            <p class="lead">注意!!房型在下單後將為您保留十分鐘，如十分鐘未付款將取消訂單</p>
        </div>
        <div class="row">
            <div class="col-md-4 order-md-2 mb-4">
                <h4 class="d-flex justify-content-between align-items-center mb-3">
                    <span class="text-muted">您下訂的房型</span>
                    <span class="badge badge-secondary badge-pill">3</span>
                </h4>
                <ul class="list-group mb-3 sticky-top">
                    <li v-for="item in checkOutItem" class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6 class="my-0">{{item.roomType}}</h6>
                            <div>
                                <small class="text-muted">
                                    {{getFormatedTime(item.checkIn)}}入住 ~ {{getFormatedTime(item.checkOut)}}退房
                                </small>
                            </div>
                            <div>
                                <small v-for="service in item.selectedExtraServices" v-if="service.serviceQuantity > 0" class="text-muted me-1 p-1">
                                    {{service.name}}:{{service.serviceQuantity}}
                                </small>
                            </div>
                            <div>
                                <small v-for="" v-if="" class="text-muted me-1 p-1">
                                    折扣<a class="text-danger"> {{-item.tPromotionPrice}}</a>
                                </small>
                            </div>
                        </div>
                        <span class="text-muted">${{item.tRoomPrice+item.tServicePrice-item.tPromotionPrice}}</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between">
                        <span>總金額 <i class="fa-solid fa-dollar-sign fa-fade"></i></span>
                        <strong>${{checkOutItem.reduce((sum, item) => sum + item.tRoomPrice + item.tServicePrice - item.tPromotionPrice, 0)}}</strong>
                    </li>
                </ul>
                <form class="card p-2">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="優惠碼">
                        <div class="input-group-append">
                            <button type="submit" class="btn btn-secondary">使用</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-md-8 order-md-1">
                <h4 class="mb-3">訂房資訊</h4>
                <form class="needs-validation" novalidate="" asp-controller="Bank" asp-action="SpgatewayPayBill">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="firstName">姓名</label>
                            <input type="text" class="form-control" id="firstName" name="firstName" placeholder="王小明" value="" required="">
                            <div class="invalid-feedback"> 請輸入您的姓名. </div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="phone">連絡電話 <span class="text-muted">(Optional)</span></label>
                            <input type="number" class="form-control" id="phone" name="phone" placeholder="0987654321" required="">
                            <div class="invalid-feedback"> 請輸入您的聯絡電話. </div>
                        </div>
                    </div>
                    <button class="btn btn-primary btn-lg btn-block" type="submit">去付款</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        (function() {
            'use strict'

            window.addEventListener('load',
                function() {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation')

                    // Loop over them and prevent submission
                    Array.prototype.filter.call(forms,
                        function(form) {
                            form.addEventListener('submit',
                                function(event) {
                                    if (form.checkValidity() === false) {
                                        event.preventDefault()
                                        event.stopPropagation()
                                    }
                                    form.classList.add('was-validated')
                                },
                                false)
                        })
                },
                false)
        }())
    </script>
    <script>
        var checkOutVue = new Vue({
            el: '#checkOut',
            data: {
                checkOutItem: [],
            },
            mounted: function() {
                var self = this;
                //self.getRoomListBySession();
                self.checkOutItem = @Html.Raw(Json.Serialize(Model));
                console.log(self.checkOutItem);
            },
            methods: {
                getRoomListBySession: function() {
                    var self = this;
                    axios.get(`${location.origin}/CheckOut/GetRoomListBySession`)
                        .then(response => {
                            self.checkOutItem = response.data;
                        })
                        .catch(error => {
                            console.log(error.response.data);
                        });
                },
                getCheckOutListByOrderId: function() {
                    var self = this;
                    axios.get(`${location.origin}/CheckOut/GetCheckOutListByOrderId`, { params: { orderId: 57 } })
                        .then(response => {
                            self.checkOutItem = response.data;
                        })
                        .catch(error => {
                            console.log(error.response.data);
                        });
                },
                getFormatedTime: function(value) {
                    var date = new Date(value);
                    var year = date.getFullYear();
                    var month = String(date.getMonth() + 1).padStart(2, '0');
                    var day = String(date.getDate()).padStart(2, '0');
                    var hours = String(date.getHours()).padStart(2, '0');
                    var minutes = String(date.getMinutes()).padStart(2, '0');

                    return `${year}-${month}-${day} ${hours}:${minutes}`;
                },
            },
        });
    </script>
}
