@section Styles{
    <link href="~/lib/element-ui/theme-chalk/index.min.css" rel="stylesheet" />
    <style>
        .el-date-editor .el-range-separator {
            width: auto;
        }

		.demo-date-picker {
			display: flex;
			width: 100%;
			padding: 0;
			flex-wrap: wrap;
			z-index: 9999;
		}

            .demo-date-picker .block {
                padding: 30px 0;
                text-align: center;
                border-right: solid 1px var(--el-border-color);
                flex: 1;
            }

                .demo-date-picker .block:last-child {
                    border-right: none;
                }

			.demo-date-picker .demonstration {
				display: block;
				color: var(--el-text-color-secondary);
				font-size: 14px;
				margin-bottom: 20px;
			}
		#map {
			height: 54.5em;
			width: auto;
		}
		.fa-solid.fa-heart {
			mix-blend-mode: difference;
			color: rgba(192,192,192,0.5);
			transition: color 0.3s ease-in-out;
		}

			.fa-heart:hover,
			.fa-solid.fa-heart.is-Liked {
				mix-blend-mode: normal;
				color: red;
			}

		.info-window {
			max-width: 300px;
		}

		.info-window__image {
			width: 100%;
			height: auto;
		}

		.info-window__title {
			font-size: 16px;
			font-weight: bold;
			margin: 8px 0;
		}

		.info-window__description {
			font-size: 14px;
			margin-bottom: 8px;
		}

		.info-window__link {
			font-size: 14px;
			color: #007bff;
			text-decoration: underline;
			cursor: pointer;
		}

    </style>
}

﻿@{
    ViewBag.Title = "Simple Map";
}

<div id="app">

    <div class="sidebar-page-container">
        <div class="circles-two">
            <div class="c-1"></div>
            <div class="c-2"></div>
        </div>
        <span class="dotted-pattern dotted-pattern-5"></span>
        <span class="tri-pattern tri-pattern-8"></span>

		<div class="result-container">
			<div class="row clearfix" style="height: 90vh;">
				<!--Content Side-->
				<div class="content-side col-lg-8 col-md-12 col-sm-12">
					<div class="blog-content">
						<div class="row">
							<!--Feature Box-->
							<template v-if="containsHotel.length == 0">
								<div class="result-box notfound bounceIn">
									<h1>沒有搜尋到符合的房型QQ</h1>
								</div>
							</template>
							<template v-else v-for="item in containsHotel">
								<div class="result-box col-xxl-4 col-xl-4 col-lg-6 col-md-6 col-sm-12 fadeInUp">
									<div class="inner-box">
										<div class="icon-box">
											<div class="heart-box">
												<button @@click="clickLike(item.hotelId)"><i :class="item.isLike ? 'fa-solid fa-heart is-Liked' : 'fa-solid fa-heart'"></i></button>
											</div>
											<img :src="item.image" />
										</div>
										<div class="text-box">
											<a :href="'/RoomDetail/'+item.roomId">
												<h3>{{item.name}}</h3>
												<h6><span>{{item.city}}</span> <span>{{item.region}}</span></h6>
												<div>
													<h4><span>NT </span><span>{{item.price}}</span><span>/每晚</span></h4>
												</div>
											</a>
										</div>
									</div>
								</div>
							</template>
						</div>
					</div>
				</div>

				<!--Sidebar Side-->
				<div class="sidebar-side col-lg-4 col-md-12 col-sm-12">
					<aside class="sidebar blog-sidebar">
						<!--Sidebar Widget-->
						<div class="sidebar-widget search-box fadeInUp">
							<div class="widget-inner" id="map">
								<div class="sidebar-title">
								</div>
							</div>
						</div>
					</aside>
				</div>
			</div>

		</div>
	</div>
	<div class="modal fade" id="likeList" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
			<div class="modal-content">
				<div class="modal-header">
					<h3 class="modal-title" id="staticBackdropLabel" style="color: red;">喜愛清單</h3>
					@*<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>*@
				</div>
				<div class="modal-body">
					<template v-if="likeVM.length === 0">
						<p>您還沒有收藏任何旅店唷!</p>
					</template>
					<template v-else>
						<div class="result-box wow fadeInUp" data-wow-delay="0ms" data-wow-duration="500ms" v-for="item in likeVM">
							<div class="inner-box">
								<div class="icon-box">
									<div class="heart-box">
										<button @@click="clickLike(item.hotelId)"><i :class="item.isLike ? 'fa-solid fa-heart is-Liked' : 'fa-solid fa-heart'"></i></button>
									</div>
									<img :src="item.hotelImage" />
								</div>
								<div class="text-box">
									<a :href="'Home/HotelPage/'+item.hotelId">
										<h3>{{item.hotelname}}</h3>
										<h6><span>{{item.city}}</span> <span>{{item.region}}</span></h6>
										<div>
											<h4>起價&ensp;<span>NT </span><span>{{item.lowestPrice}}</span><span>/每晚</span></h4>
											<h4>建立時間:{{item.createDate | formatDateTime }}</h4>
										</div>
									</a>
								</div>

                            </div>
                        </div>
                    </template>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                </div>
            </div>
        </div>
    </div>

</div>


@section Scripts {
    <script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBS-dimgmmzjnxx6Vax1lDAKB3FBShOgKw"></script>
    <a href="~/lib/jquery/dist/jquery.min.map"></a>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/vue/vue.min.js"></script>
    <script src="~/lib/axios/axios.min.js"></script>
    <script src="~/lib/element-ui/index.min.js"></script>
	<script>
		var app = new Vue({
			el: '#datePicker',
			data: {
				size: 'default',
				timeValue: null,
				pickerOptions: {
					disabledDate: null,
				},


			},
			mounted: function () {
				let _this = this;
				_this.pickerOptions.disabledDate = _this.disabledStartDate;
			},
			methods: {
				disabledStartDate(date) {
					let _this = this;
					//禁用今天以前的日期
					var dateNow = new Date();
					var yesterday = dateNow.setDate(dateNow.getDate() - 1);
					if (date.getTime() <= yesterday) {
						return true;
					}
					return false;
				},
			},
		});

	</script>
    <script>
        const vm = new Vue({
            el: "#app",
            data: {
                resultVM: [],
                markers: [],
                selectLocation: null,
                map: null,
                infoWindowAll: {},
                infoWindow: "",
                likeVM: [],
                baseURL: "",
                numOfGuests: 2,
                containsHotel: [],
            },
            computed: {

            },
            filters: {
                formatDateTime(value) {
                    const date = new Date(value);
                    const year = date.getFullYear();
                    const month = ("0" + (date.getMonth() + 1)).slice(-2);
                    const day = ("0" + date.getDate()).slice(-2);
                    const hours = ("0" + date.getHours()).slice(-2);
                    const minutes = ("0" + date.getMinutes()).slice(-2);
                    return `${year}-${month}-${day} ${hours}:${minutes}`;
                }
            },
            mounted: function () {
                let _this = this;
                _this.filterResultVM();
                _this.baseURL = window.location.origin;
            },
            methods: {
                getInfoWindowContent: function (img, title, desc) {

                    return `<div class="info-window">
                  <img class="info-window__image" src="${img}" alt="Image">
                  <h3 class="info-window__title">${title}</h3>
                  <p class="info-window__description">${desc}</p>
                  <a class="info-window__link" href="#">Read More</a>
                </div>`;
                },
				filterResultVM: function () {
					let _this = this;
					axios.get(`/api/Result/Get`).then(response => {
						//如果有輸入時間
						if (app.timeValue != null) {

							var startDate = app.timeValue[0];
							var endDate = app.timeValue[1];
							_this.resultVM = response.data.filter(x => {
								if (x.roomOrders.length == 0) {
									return true;
								} else if (x.roomOrders.length != 0) {
									return x.roomOrders.find(c => c.checkIn <= endDate && c.checkOut >= startDate)
								}
								return false;
							}).filter(x => {
								if (_this.numOfGuests >= 5) {
									return x.maxGuests == 6;
								} else if (_this.numOfGuests >= 3) {
									return x.maxGuests == 4;
								}
								return x.maxGuests == 2;
							})

						} else if (app.timeValue == null) {
						//如果沒輸入時間
							_this.resultVM = response.data.filter(x => {

								if (_this.numOfGuests >= 5) {
									return x.maxGuests == 6;
								} else if (_this.numOfGuests >= 3) {
									return x.maxGuests == 4;
								}
								return x.maxGuests == 2;
							})
						
						}
						_this.initMap();
					});
					
				},
				initMap: function () {
					let _this = this;
					_this.map = new google.maps.Map(document.getElementById("map"), {
						zoom: 14,
						center: { lat: parseFloat(_this.resultVM[46].positionLat), lng: parseFloat(_this.resultVM[46].positionLon) },
					});
					//const mapPrice = document.createElement("div");
					//mapPrice.classname="price-tag";
					//mapPrice.textContent=""


					_this.map.addListener("bounds_changed", function () {
						let x = _this.map.getBounds();
						_this.containsHotel = [];
						for (let i = 0; i < _this.resultVM.length; i++) {
							if (x.contains({ lat: parseFloat(_this.resultVM[i].positionLat), lng: parseFloat(_this.resultVM[i].positionLon) })) {
								_this.containsHotel.push(_this.resultVM[i])
							}
						}
					})
					_this.resultVM.forEach(location => {
						const marker = new google.maps.Marker({
							position: { lat: parseFloat(location.positionLat), lng: parseFloat(location.positionLon) },
							map: _this.map,
							//icon: '/images/mapPin.png',
							title: location.name,
							label: {
								color: "white",
								text: location.name,
								className: "btn btn-primary",
							},
						});
						const infoWindow = new google.maps.InfoWindow({
							content: _this.getInfoWindowContent(location.image, location.name, location.price),
							maxWidth: 200,
						});

						_this.markers.push(marker);
						marker.addListener('click', function () {
							infoWindow.open(map, marker)
						});
					});
				},
				getLikes: function () {
					let _this = this;
					axios.get(`/Like/GetLikes`).then(response => {
						//alert(JSON.stringify(response.data));
						_this.likeVM = response.data;
					}).catch(error => {
						//console.log(error.response.data);
						location.href = _this.baseURL + error.response.data;
					});
				},
				clickLike: function (id) {
					let _this = this;
					var request = { params: { hotelId: id } };
					axios.get(`/Like/ClickLike`, { params: { hotelId: id } }).then(() => {
						_this.filterResultVM();
						_this.getLikes();
					}).catch(error => {
						//console.log(error.response.data);
						location.href = _this.baseURL + error.response.data;
					});
				},
			}
		});
	</script>
	<script>
		var likeapp = new Vue({
			el: '#likeButton',
			data: {

			},
			mounted: function () {

			},
			methods: {

			},
		});

	</script>
	
	<script>
		var searchApp = new Vue({
			el: '#search',
			data: {

			},
			mounted: function () {
				let _this = this;
			},
			methods: {
				searchRoom: function () {	
					vm.numOfGuests = parseInt($('input[name=adult-group]:checked').val()) + parseInt($('input[name=child-group]:checked').val());
					vm.filterResultVM();
				},
			},
		});

	</script>
				}
